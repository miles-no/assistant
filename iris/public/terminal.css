/* HAL-9000 Inspired Retro-Futuristic Terminal */

* {
	margin: 0;
	padding: 0;
	box-sizing: border-box;
}

:root {
	--hal-red: #ff0000;
	--hal-red-glow: rgba(255, 0, 0, 0.8);
	--hal-dark: #0a0a0a;
	--terminal-bg: #000000;
	--terminal-text: #ff0000;
	--terminal-text-dim: #880000;
	--terminal-glow: rgba(255, 0, 0, 0.5);
	--scanline-color: rgba(255, 0, 0, 0.05);
}

body {
	font-family: "IBM Plex Mono", "Courier New", monospace;
	background: var(--terminal-bg);
	color: var(--terminal-text);
	height: 100vh;
	margin: 0;
	padding: 0;
	overflow: hidden;
}

/* Main App Container - Flexbox Layout */
.app-container {
	display: flex;
	flex-direction: column;
	align-items: center;
	height: 100vh;
	width: 100%;
}

/* CRT Screen Effect Container */
body::before {
	content: "";
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	pointer-events: none;
	z-index: 2000;
	background: repeating-linear-gradient(
		0deg,
		rgba(0, 0, 0, 0.15) 0px,
		transparent 1px,
		transparent 2px,
		rgba(0, 0, 0, 0.15) 3px
	);
	animation: crt-flicker 0.15s infinite;
}

/* CRT Bulge/Curvature Effect */
body::after {
	content: "";
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	pointer-events: none;
	z-index: 1999;
	background: radial-gradient(
		ellipse at center,
		transparent 0%,
		transparent 60%,
		rgba(0, 0, 0, 0.3) 100%
	);
}

/* Scanline CRT Effect - Enhanced */
.scanlines {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	pointer-events: none;
	z-index: 1000;
	background: repeating-linear-gradient(
		0deg,
		transparent 0px,
		transparent 2px,
		var(--scanline-color) 2px,
		var(--scanline-color) 4px
	);
	opacity: 0.25;
	animation: scanline-drift 8s linear infinite;
}

@keyframes scanline-drift {
	0% {
		transform: translateY(0);
		opacity: 0.2;
	}
	50% {
		transform: translateY(10px);
		opacity: 0.3;
	}
	100% {
		transform: translateY(0);
		opacity: 0.2;
	}
}

/* Scanline sweep effect (moving line) */
.scanlines::after {
	content: "";
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: linear-gradient(
		to bottom,
		transparent 0%,
		transparent 48%,
		rgba(255, 0, 0, 0.1) 49%,
		rgba(255, 0, 0, 0.2) 50%,
		rgba(255, 0, 0, 0.1) 51%,
		transparent 52%,
		transparent 100%
	);
	animation: scanline-sweep 10s linear infinite;
}

@keyframes scanline-sweep {
	0% {
		transform: translateY(-100%);
	}
	100% {
		transform: translateY(100vh);
	}
}

@keyframes crt-flicker {
	0% {
		opacity: 1;
	}
	50% {
		opacity: 0.98;
	}
	100% {
		opacity: 1;
	}
}

/* Static Noise Overlay */
.static-noise {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	pointer-events: none;
	z-index: 1998;
	opacity: 0.03;
	background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="300" height="300"><filter id="noise"><feTurbulence type="fractalNoise" baseFrequency="0.9" numOctaves="4" stitchTiles="stitch"/></filter><rect width="100%" height="100%" filter="url(%23noise)" opacity="1"/></svg>');
	animation: static-noise 0.2s infinite;
}

@keyframes static-noise {
	0% {
		transform: translate(0, 0);
	}
	10% {
		transform: translate(-5%, -5%);
	}
	20% {
		transform: translate(-10%, 5%);
	}
	30% {
		transform: translate(5%, -10%);
	}
	40% {
		transform: translate(-5%, 15%);
	}
	50% {
		transform: translate(-10%, 5%);
	}
	60% {
		transform: translate(15%, 0);
	}
	70% {
		transform: translate(0, 10%);
	}
	80% {
		transform: translate(-15%, 0);
	}
	90% {
		transform: translate(10%, 5%);
	}
	100% {
		transform: translate(5%, 0);
	}
}

/* IRIS Eye */
.hal-eye-container {
	margin: 30px auto 20px;
	text-align: center;
	z-index: 100;
}

.hal-eye {
	width: 100px;
	height: 100px;
	margin: 0 auto 15px;
	position: relative;
}

/* Outer glow */
.hal-eye-glow {
	position: absolute;
	top: -30px;
	left: -30px;
	right: -30px;
	bottom: -30px;
	border-radius: 50%;
	background: radial-gradient(circle, var(--hal-red-glow) 0%, transparent 70%);
	opacity: 0.5;
	animation: iris-glow 3s ease-in-out infinite;
	transition: opacity 0.3s ease;
}

/* Sclera (eye white/outer ring) */
.hal-eye-sclera {
	position: absolute;
	width: 100%;
	height: 100%;
	border-radius: 50%;
	background: radial-gradient(
		circle at center,
		#220000 0%,
		#330000 50%,
		#440000 100%
	);
	box-shadow:
		inset 0 0 20px rgba(0, 0, 0, 0.8),
		0 0 15px rgba(255, 0, 0, 0.3);
}

/* Iris container (can move for tracking) */
.hal-eye-iris {
	position: absolute;
	width: 70px;
	height: 70px;
	top: 15px;
	left: 15px;
	border-radius: 50%;
	background: radial-gradient(
		circle at 40% 40%,
		#ff3333 0%,
		#ff0000 20%,
		#cc0000 40%,
		#880000 70%,
		#440000 100%
	);
	transition: transform 0.15s ease-out;
}

/* Iris texture (radial lines) */
.iris-texture {
	position: absolute;
	width: 100%;
	height: 100%;
	border-radius: 50%;
	background: repeating-conic-gradient(
		from 0deg,
		transparent 0deg 8deg,
		rgba(0, 0, 0, 0.3) 8deg 10deg
	);
	opacity: 0.4;
}

/* Pupil (dilates/contracts) */
.hal-eye-pupil {
	position: absolute;
	width: 30px;
	height: 30px;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%) scale(1);
	border-radius: 50%;
	background: radial-gradient(
		circle at 35% 35%,
		#000000 0%,
		#000000 60%,
		#330000 100%
	);
	transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
	box-shadow: 0 0 10px rgba(0, 0, 0, 0.8);
}

/* Highlight for realism */
.eye-highlight {
	position: absolute;
	width: 12px;
	height: 12px;
	top: 18px;
	left: 22px;
	border-radius: 50%;
	background: radial-gradient(
		circle,
		rgba(255, 100, 100, 0.6) 0%,
		transparent 70%
	);
	pointer-events: none;
}

/* Animations */
@keyframes iris-glow {
	0%,
	100% {
		opacity: 0.4;
	}
	50% {
		opacity: 0.7;
	}
}

/* State: Idle - gentle pulse */
.hal-eye.idle .hal-eye-pupil {
	animation: pupil-idle 4s ease-in-out infinite;
}

@keyframes pupil-idle {
	0%,
	100% {
		transform: translate(-50%, -50%) scale(1);
	}
	50% {
		transform: translate(-50%, -50%) scale(1.05);
	}
}

/* Hover state - pupil dilates in anticipation */
.hal-eye:hover .hal-eye-pupil {
	transform: translate(-50%, -50%) scale(1.15);
	transition: transform 0.3s ease-out;
}

.hal-eye:hover .hal-eye-glow {
	opacity: 0.7;
	transition: opacity 0.3s ease-out;
}

/* State: Thinking - contracted, jittery */
.hal-eye.thinking .hal-eye-pupil {
	transform: translate(-50%, -50%) scale(0.7);
	animation: pupil-thinking 0.6s ease-in-out infinite;
}

.hal-eye.thinking .hal-eye-glow {
	opacity: 0.8;
	animation: glow-intense 0.6s ease-in-out infinite;
}

@keyframes pupil-thinking {
	0%,
	100% {
		transform: translate(-50%, -50%) scale(0.7);
	}
	25% {
		transform: translate(-49%, -51%) scale(0.68);
	}
	50% {
		transform: translate(-51%, -50%) scale(0.72);
	}
	75% {
		transform: translate(-50%, -49%) scale(0.69);
	}
}

@keyframes glow-intense {
	0%,
	100% {
		opacity: 0.7;
	}
	50% {
		opacity: 1;
	}
}

/* State: Alert - rapid contract then dilate */
.hal-eye.alert .hal-eye-pupil {
	animation: pupil-alert 0.5s ease-out;
}

@keyframes pupil-alert {
	0% {
		transform: translate(-50%, -50%) scale(1);
	}
	30% {
		transform: translate(-50%, -50%) scale(0.4);
	}
	100% {
		transform: translate(-50%, -50%) scale(1);
	}
}

/* State: Error - wide dilation */
.hal-eye.error .hal-eye-pupil {
	transform: translate(-50%, -50%) scale(1.4);
	animation: pupil-error 0.8s ease-in-out;
}

.hal-eye.error .hal-eye-glow {
	opacity: 1;
	animation: glow-error 0.4s ease-in-out infinite;
}

@keyframes pupil-error {
	0%,
	100% {
		transform: translate(-50%, -50%) scale(1.4);
	}
	50% {
		transform: translate(-50%, -50%) scale(1.5);
	}
}

@keyframes glow-error {
	0%,
	100% {
		opacity: 0.9;
	}
	50% {
		opacity: 1;
	}
}

/* Blink animation */
.hal-eye.blinking .hal-eye-pupil {
	animation: pupil-blink 0.15s ease-in-out;
}

@keyframes pupil-blink {
	0%,
	100% {
		transform: translate(-50%, -50%) scale(1);
	}
	50% {
		transform: translate(-50%, -50%) scale(0.1);
	}
}

/* LLM Connection States */
/* Powered State - Enhanced energy when LLM is connected */
/* Eye always displays at full brightness (powered/unpowered states removed) */

.hal-status {
	font-size: 12px;
	letter-spacing: 2px;
	color: var(--terminal-text-dim);
	text-transform: uppercase;
	text-shadow: 0 0 5px var(--terminal-glow);
}

/* Terminal Container */
.terminal-container {
	flex: 1;
	width: 90%;
	max-width: 900px;
	margin-bottom: 30px;
	display: flex;
	flex-direction: column;
	min-height: 0; /* Allow flex item to shrink below content size */
}

/* Login Screen */
.login-screen {
	height: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
}

.login-box {
	text-align: center;
	padding: 40px;
	border: 2px solid var(--hal-red);
	border-radius: 4px;
	box-shadow:
		0 0 20px var(--terminal-glow),
		inset 0 0 20px rgba(255, 0, 0, 0.1);
	background: rgba(0, 0, 0, 0.8);
	max-width: 500px;
	width: 100%;
}

.ascii-art {
	font-size: 10px;
	line-height: 1;
	color: var(--hal-red);
	text-shadow: 0 0 10px var(--terminal-glow);
	margin-bottom: 20px;
}

.tagline {
	font-size: 18px;
	margin-bottom: 10px;
	text-shadow: 0 0 5px var(--terminal-glow);
}

.sub-tagline {
	font-size: 12px;
	color: var(--terminal-text-dim);
	margin-bottom: 30px;
	font-style: italic;
}

.login-form {
	text-align: left;
}

.form-group {
	margin-bottom: 20px;
}

.form-group label {
	display: block;
	font-size: 12px;
	margin-bottom: 8px;
	letter-spacing: 1px;
}

.form-group input {
	width: 100%;
	padding: 10px;
	background: rgba(0, 0, 0, 0.6);
	border: 1px solid var(--hal-red);
	color: var(--hal-red);
	font-family: inherit;
	font-size: 14px;
	outline: none;
	transition: all 0.3s;
}

.form-group input:focus {
	box-shadow: 0 0 10px var(--terminal-glow);
	border-color: var(--hal-red);
}

.form-group input::placeholder {
	color: var(--terminal-text-dim);
	opacity: 0.5;
}

.terminal-button {
	width: 100%;
	padding: 12px;
	background: rgba(255, 0, 0, 0.1);
	border: 2px solid var(--hal-red);
	color: var(--hal-red);
	font-family: inherit;
	font-size: 14px;
	font-weight: 600;
	cursor: pointer;
	transition: all 0.3s;
	letter-spacing: 2px;
}

.terminal-button:hover {
	background: rgba(255, 0, 0, 0.2);
	box-shadow: 0 0 15px var(--terminal-glow);
}

.button-bracket {
	font-weight: 600;
}

.login-error {
	margin-top: 15px;
	padding: 10px;
	background: rgba(255, 0, 0, 0.1);
	border: 1px solid var(--hal-red);
	border-radius: 2px;
	font-size: 12px;
	display: none;
}

.login-error.show {
	display: block;
}

/* Terminal Interface */
.terminal {
	height: 100%;
	display: flex;
	flex-direction: column;
	border: 2px solid var(--hal-red);
	border-radius: 4px;
	box-shadow:
		0 0 30px var(--terminal-glow),
		inset 0 0 30px rgba(255, 0, 0, 0.05);
	background: rgba(0, 0, 0, 0.9);
}

.terminal-header {
	display: flex;
	align-items: center;
	justify-content: space-between;
	padding: 15px 20px;
	border-bottom: 1px solid var(--hal-red);
	background: rgba(255, 0, 0, 0.05);
}

.terminal-title {
	font-size: 14px;
	font-weight: 600;
	letter-spacing: 3px;
	text-shadow: 0 0 5px var(--terminal-glow);
	flex: 1;
	display: flex;
	align-items: center;
	gap: 10px;
}

.llm-status-indicator {
	display: inline-block;
	width: 8px;
	height: 8px;
	border-radius: 50%;
	background-color: #666;
	box-shadow: 0 0 4px rgba(0, 0, 0, 0.5);
	transition: all 0.3s ease;
}

.llm-status-indicator.connected {
	background-color: #00ff00;
	box-shadow: 0 0 6px rgba(0, 255, 0, 0.6);
}

.llm-status-indicator.disconnected {
	background-color: #ff0000;
	box-shadow: 0 0 6px rgba(255, 0, 0, 0.6);
}

.terminal-info {
	font-size: 11px;
	color: var(--terminal-text-dim);
	flex: 1;
	text-align: center;
}

.terminal-logout-wrapper {
	flex: 1;
	text-align: right;
}

.terminal-logout {
	padding: 5px 10px;
	background: transparent;
	border: 1px solid var(--hal-red);
	color: var(--hal-red);
	font-family: inherit;
	font-size: 10px;
	cursor: pointer;
	transition: all 0.3s;
}

.terminal-logout:hover {
	background: rgba(255, 0, 0, 0.1);
	box-shadow: 0 0 10px var(--terminal-glow);
}

.terminal-output {
	flex: 1;
	padding: 20px;
	overflow-y: auto;
	font-size: 14px;
	line-height: 1.2;
}

.terminal-output::-webkit-scrollbar {
	width: 8px;
}

.terminal-output::-webkit-scrollbar-track {
	background: rgba(0, 0, 0, 0.3);
}

.terminal-output::-webkit-scrollbar-thumb {
	background: var(--hal-red);
	border-radius: 4px;
}

.terminal-line {
	margin-bottom: 2px;
	animation: terminal-fade-in 0.3s ease-out;
}

@keyframes terminal-fade-in {
	from {
		opacity: 0;
		transform: translateY(-5px);
	}
	to {
		opacity: 1;
		transform: translateY(0);
	}
}

.terminal-line.user-input {
	color: var(--hal-red);
}

.terminal-line.system-output {
	color: var(--terminal-text-dim);
}

.terminal-line.error {
	color: #ff6666;
}

.terminal-line.success {
	color: #ff0000;
	font-weight: 600;
}

.terminal-input-line {
	display: flex;
	align-items: center;
	padding: 15px 20px;
	border-top: 1px solid var(--hal-red);
	background: rgba(255, 0, 0, 0.05);
}

.terminal-prompt {
	margin-right: 10px;
	font-weight: 600;
	text-shadow: 0 0 5px var(--terminal-glow);
	animation: cursor-blink 1s infinite;
}

@keyframes cursor-blink {
	0%,
	49% {
		opacity: 1;
	}
	50%,
	100% {
		opacity: 0.3;
	}
}

.terminal-input {
	flex: 1;
	background: transparent;
	border: none;
	color: var(--hal-red);
	font-family: inherit;
	font-size: 14px;
	outline: none;
	caret-color: var(--hal-red);
}

.terminal-input::placeholder {
	color: var(--terminal-text-dim);
	opacity: 0.5;
}

/* Typing indicator when HAL is thinking */
.typing-indicator {
	display: inline-flex;
	align-items: center;
	gap: 5px;
}

.typing-dot {
	width: 6px;
	height: 6px;
	background: var(--hal-red);
	border-radius: 50%;
	animation: typing-bounce 1.4s infinite ease-in-out;
	box-shadow: 0 0 5px var(--terminal-glow);
}

.typing-dot:nth-child(1) {
	animation-delay: -0.32s;
}
.typing-dot:nth-child(2) {
	animation-delay: -0.16s;
}

@keyframes typing-bounce {
	0%,
	80%,
	100% {
		transform: scale(0.8);
		opacity: 0.5;
	}
	40% {
		transform: scale(1);
		opacity: 1;
	}
}

/* Responsive */
@media (max-width: 768px) {
	.terminal-container {
		width: 95%;
	}

	.login-box {
		padding: 30px 20px;
	}

	.ascii-art {
		font-size: 8px;
	}
}

/* Ultrawide displays - Eye on the left */
@media (min-width: 2560px) {
	.app-container {
		flex-direction: row;
		align-items: flex-start;
		justify-content: center;
		gap: 60px;
		padding: 30px;
	}

	.hal-eye-container {
		margin: 60px 0 0 0;
		position: sticky;
		top: 60px;
	}

	/* Larger eye for ultrawide displays */
	.hal-eye {
		width: 160px;
		height: 160px;
	}

	.hal-eye-iris {
		width: 112px;
		height: 112px;
		top: 24px;
		left: 24px;
	}

	.hal-eye-pupil {
		width: 48px;
		height: 48px;
	}

	.eye-highlight {
		width: 20px;
		height: 20px;
		top: 30px;
		left: 36px;
	}

	.hal-status {
		font-size: 14px;
	}

	.terminal-container {
		margin-bottom: 0;
		flex: 0 1 900px;
	}
}

/* Glitch effect for errors */
@keyframes glitch {
	0%,
	100% {
		text-shadow: 0 0 5px var(--terminal-glow);
	}
	25% {
		text-shadow:
			-2px 0 var(--terminal-glow),
			2px 0 var(--hal-red-glow);
	}
	50% {
		text-shadow:
			2px 0 var(--terminal-glow),
			-2px 0 var(--hal-red-glow);
	}
	75% {
		text-shadow:
			-2px 0 var(--hal-red-glow),
			2px 0 var(--terminal-glow);
	}
}

.glitch {
	animation: glitch 0.3s infinite;
}

/* Markdown Content - Terminal ASCII Style */
.markdown-content {
	font-family: inherit;
	line-height: 1.5;
}

.markdown-content h1,
.markdown-content h2,
.markdown-content h3 {
	color: var(--hal-red);
	font-weight: 600;
	margin: 1em 0 0.5em 0;
	text-shadow: 0 0 5px var(--terminal-glow);
}

.markdown-content h1::before {
	content: "═══ ";
}

.markdown-content h1::after {
	content: " ═══";
}

.markdown-content h2::before {
	content: "══ ";
}

.markdown-content h2::after {
	content: " ══";
}

.markdown-content h3::before {
	content: "─ ";
}

.markdown-content ul,
.markdown-content ol {
	margin: 0.5em 0;
	padding-left: 2em;
}

.markdown-content li {
	margin: 0.25em 0;
}

.markdown-content ul > li::marker {
	content: "▸ ";
}

.markdown-content p {
	margin: 0.5em 0;
}

.markdown-content code {
	background: rgba(255, 0, 0, 0.1);
	padding: 2px 6px;
	border: 1px solid rgba(255, 0, 0, 0.3);
	font-family: inherit;
	color: var(--hal-red);
}

.markdown-content pre {
	background: rgba(255, 0, 0, 0.05);
	border: 1px solid rgba(255, 0, 0, 0.3);
	padding: 1em;
	margin: 1em 0;
	overflow-x: auto;
}

.markdown-content pre code {
	background: none;
	border: none;
	padding: 0;
}

.markdown-content blockquote {
	border-left: 3px solid var(--hal-red);
	padding-left: 1em;
	margin: 1em 0;
	color: var(--terminal-text-dim);
}

.markdown-content table {
	border-collapse: collapse;
	margin: 1em 0;
	width: 100%;
}

.markdown-content th,
.markdown-content td {
	border: 1px solid rgba(255, 0, 0, 0.3);
	padding: 0.5em 1em;
	text-align: left;
}

.markdown-content th {
	font-weight: 600;
	background: rgba(255, 0, 0, 0.1);
}

.markdown-content strong {
	font-weight: 600;
	text-shadow: 0 0 3px var(--terminal-glow);
}

.markdown-content hr {
	border: none;
	border-top: 1px solid var(--hal-red);
	margin: 1em 0;
}

.markdown-content a {
	color: var(--hal-red);
	text-decoration: underline;
}

.markdown-content a:hover {
	text-shadow: 0 0 5px var(--terminal-glow);
}

/* ========================================
   CRT State-Based Distortion Effects
   ======================================== */

/* Idle State - Minimal effects */
body.crt-idle .scanlines {
	animation: scanline-drift 8s linear infinite;
}

/* Thinking State - Horizontal interference */
body.crt-thinking .scanlines {
	animation:
		scanline-drift 8s linear infinite,
		scanline-interference 0.6s ease-in-out infinite;
}

body.crt-thinking .scanlines::after {
	animation:
		scanline-sweep 10s linear infinite,
		scanline-pulse 0.6s ease-in-out infinite;
}

@keyframes scanline-interference {
	0%,
	100% {
		transform: translateY(0) translateX(0);
		opacity: 0.25;
	}
	33% {
		transform: translateY(3px) translateX(-2px);
		opacity: 0.3;
	}
	66% {
		transform: translateY(7px) translateX(2px);
		opacity: 0.35;
	}
}

@keyframes scanline-pulse {
	0%,
	100% {
		opacity: 1;
	}
	50% {
		opacity: 0.7;
	}
}

/* Alert State - Rapid flicker and RGB shift */
body.crt-alert .scanlines {
	animation: scanline-alert 0.1s ease-in-out 5;
}

body.crt-alert .scanlines::after {
	animation: scanline-alert-sweep 0.3s ease-out;
}

body.crt-alert::before {
	animation: crt-alert-flash 0.5s ease-out;
}

@keyframes scanline-alert {
	0%,
	100% {
		transform: translateY(0) translateX(0);
		opacity: 0.25;
	}
	25% {
		transform: translateY(-2px) translateX(3px);
		opacity: 0.5;
	}
	50% {
		transform: translateY(2px) translateX(-3px);
		opacity: 0.6;
	}
	75% {
		transform: translateY(1px) translateX(2px);
		opacity: 0.4;
	}
}

@keyframes scanline-alert-sweep {
	0% {
		transform: translateY(0);
		opacity: 0.5;
	}
	100% {
		transform: translateY(100vh);
		opacity: 1;
	}
}

@keyframes crt-alert-flash {
	0% {
		filter: brightness(1.5) contrast(1.2);
	}
	50% {
		filter: brightness(1.3) contrast(1.1);
	}
	100% {
		filter: brightness(1) contrast(1);
	}
}

/* Error State - Heavy distortion and static burst */
body.crt-error .scanlines {
	animation: scanline-error 0.8s ease-in-out infinite;
}

body.crt-error .scanlines::after {
	opacity: 0.6;
	animation: scanline-error-sweep 1s ease-in-out infinite;
}

body.crt-error::before {
	animation: crt-error-shake 0.8s ease-in-out infinite;
}

body.crt-error .static-noise {
	opacity: 0.15;
	animation:
		static-noise 0.1s infinite,
		static-burst 0.8s ease-in-out infinite;
}

@keyframes scanline-error {
	0%,
	100% {
		transform: translateY(0) translateX(0) skewX(0deg);
		opacity: 0.3;
	}
	20% {
		transform: translateY(-5px) translateX(-4px) skewX(-2deg);
		opacity: 0.5;
	}
	40% {
		transform: translateY(5px) translateX(4px) skewX(2deg);
		opacity: 0.6;
	}
	60% {
		transform: translateY(-3px) translateX(3px) skewX(-1deg);
		opacity: 0.55;
	}
	80% {
		transform: translateY(3px) translateX(-3px) skewX(1deg);
		opacity: 0.4;
	}
}

@keyframes scanline-error-sweep {
	0%,
	100% {
		transform: translateY(-50%) scaleY(1.5);
		opacity: 0.6;
	}
	50% {
		transform: translateY(150%) scaleY(2);
		opacity: 0.8;
	}
}

@keyframes crt-error-shake {
	0%,
	100% {
		transform: translate(0, 0);
	}
	10% {
		transform: translate(-2px, 1px);
	}
	20% {
		transform: translate(2px, -1px);
	}
	30% {
		transform: translate(-1px, 2px);
	}
	40% {
		transform: translate(1px, -2px);
	}
	50% {
		transform: translate(-2px, -1px);
	}
	60% {
		transform: translate(2px, 1px);
	}
	70% {
		transform: translate(-1px, -1px);
	}
	80% {
		transform: translate(1px, 1px);
	}
	90% {
		transform: translate(-1px, 2px);
	}
}

@keyframes static-burst {
	0%,
	100% {
		opacity: 0.08;
	}
	50% {
		opacity: 0.2;
	}
}

/* Chromatic Aberration Effect for Alert/Error */
body.crt-alert .app-container,
body.crt-error .app-container {
	animation: chromatic-aberration 0.3s ease-out;
}

@keyframes chromatic-aberration {
	0% {
		text-shadow:
			-2px 0 0 rgba(255, 0, 0, 0.7),
			2px 0 0 rgba(0, 255, 255, 0.7);
	}
	50% {
		text-shadow:
			-3px 0 0 rgba(255, 0, 0, 0.8),
			3px 0 0 rgba(0, 255, 255, 0.8);
	}
	100% {
		text-shadow: none;
	}
}

/* ========================================
   IRIS Click Warning System
   ======================================== */

/* Warning message in terminal */
.iris-warning-message {
	color: var(--hal-red);
	font-weight: 600;
	animation: warning-flash 0.5s ease-out;
	background: rgba(255, 0, 0, 0.1);
	padding: 8px 12px;
	margin: 4px 0;
	border-left: 3px solid var(--hal-red);
}

.warning-prefix {
	color: #ff6666;
	font-weight: 700;
	text-shadow: 0 0 10px var(--hal-red);
	letter-spacing: 1px;
}

@keyframes warning-flash {
	0% {
		background: rgba(255, 0, 0, 0.3);
		box-shadow: 0 0 20px rgba(255, 0, 0, 0.5);
	}
	100% {
		background: rgba(255, 0, 0, 0.1);
		box-shadow: none;
	}
}

/* Screen shake effects */
body.iris-click-shake {
	animation: screen-shake 0.5s ease-in-out;
}

@keyframes screen-shake {
	0%,
	100% {
		transform: translate(0, 0);
	}
	10% {
		transform: translate(-3px, 2px);
	}
	20% {
		transform: translate(3px, -2px);
	}
	30% {
		transform: translate(-2px, -3px);
	}
	40% {
		transform: translate(2px, 3px);
	}
	50% {
		transform: translate(-3px, -2px);
	}
	60% {
		transform: translate(3px, 2px);
	}
	70% {
		transform: translate(-2px, 3px);
	}
	80% {
		transform: translate(2px, -3px);
	}
	90% {
		transform: translate(-1px, 1px);
	}
}

/* Intensity-based effects */
body.iris-click-intensity-mild .scanlines {
	animation:
		scanline-drift 8s linear infinite,
		intensity-mild-flicker 0.2s ease-in-out 3;
}

body.iris-click-intensity-moderate .scanlines {
	animation:
		scanline-drift 8s linear infinite,
		intensity-moderate-flicker 0.15s ease-in-out 5;
}

body.iris-click-intensity-moderate::before {
	animation:
		crt-flicker 0.15s infinite,
		intensity-moderate-flash 0.3s ease-out;
}

body.iris-click-intensity-severe .scanlines {
	animation: scanline-error 0.3s ease-in-out 3;
}

body.iris-click-intensity-severe::before {
	animation: crt-error-shake 0.3s ease-in-out 3;
}

body.iris-click-intensity-severe .static-noise {
	opacity: 0.2;
	animation: static-noise 0.05s infinite;
}

body.iris-click-intensity-extreme {
	animation: screen-shake-extreme 1s ease-in-out;
}

body.iris-click-intensity-extreme .scanlines {
	animation: scanline-error 0.2s ease-in-out infinite;
}

body.iris-click-intensity-extreme::before {
	animation:
		crt-error-shake 0.2s ease-in-out infinite,
		intensity-extreme-invert 0.3s ease-in-out 2;
}

body.iris-click-intensity-extreme .static-noise {
	opacity: 0.3;
	animation: static-noise 0.03s infinite;
}

@keyframes screen-shake-extreme {
	0%,
	100% {
		transform: translate(0, 0);
	}
	5% {
		transform: translate(-5px, 3px) rotate(0.5deg);
	}
	10% {
		transform: translate(5px, -3px) rotate(-0.5deg);
	}
	15% {
		transform: translate(-4px, -5px) rotate(0.3deg);
	}
	20% {
		transform: translate(4px, 5px) rotate(-0.3deg);
	}
	25% {
		transform: translate(-5px, -3px) rotate(0.5deg);
	}
	30% {
		transform: translate(5px, 3px) rotate(-0.5deg);
	}
	35% {
		transform: translate(-3px, 5px) rotate(0.3deg);
	}
	40% {
		transform: translate(3px, -5px) rotate(-0.3deg);
	}
	45% {
		transform: translate(-4px, 3px) rotate(0.2deg);
	}
	50% {
		transform: translate(4px, -3px) rotate(-0.2deg);
	}
	55% {
		transform: translate(-3px, -4px) rotate(0.3deg);
	}
	60% {
		transform: translate(3px, 4px) rotate(-0.3deg);
	}
	65% {
		transform: translate(-2px, -3px) rotate(0.2deg);
	}
	70% {
		transform: translate(2px, 3px) rotate(-0.2deg);
	}
	75% {
		transform: translate(-3px, 2px) rotate(0.1deg);
	}
	80% {
		transform: translate(3px, -2px) rotate(-0.1deg);
	}
	85% {
		transform: translate(-2px, 2px);
	}
	90% {
		transform: translate(2px, -2px);
	}
	95% {
		transform: translate(-1px, 1px);
	}
}

@keyframes intensity-mild-flicker {
	0%,
	100% {
		opacity: 1;
	}
	50% {
		opacity: 0.7;
	}
}

@keyframes intensity-moderate-flicker {
	0%,
	100% {
		opacity: 1;
	}
	50% {
		opacity: 0.5;
	}
}

@keyframes intensity-moderate-flash {
	0% {
		filter: brightness(1.3);
	}
	50% {
		filter: brightness(1.5);
	}
	100% {
		filter: brightness(1);
	}
}

@keyframes intensity-extreme-invert {
	0%,
	100% {
		filter: brightness(1);
	}
	50% {
		filter: brightness(1.8) contrast(1.3) saturate(2);
	}
}

/* Settings Modal */
.modal-backdrop {
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: rgba(0, 0, 0, 0.85);
	display: flex;
	align-items: center;
	justify-content: center;
	z-index: 3000;
	backdrop-filter: blur(4px);
}

.settings-modal {
	background: var(--terminal-bg);
	border: 2px solid var(--hal-red);
	box-shadow:
		0 0 20px var(--hal-red-glow),
		inset 0 0 20px rgba(255, 0, 0, 0.1);
	max-width: 600px;
	width: 90%;
	max-height: 80vh;
	overflow-y: auto;
	animation: modal-slide-in 0.3s ease-out;
}

@keyframes modal-slide-in {
	from {
		transform: translateY(-50px);
		opacity: 0;
	}
	to {
		transform: translateY(0);
		opacity: 1;
	}
}

.settings-header {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 1rem 1.5rem;
	border-bottom: 1px solid var(--hal-red);
	background: rgba(255, 0, 0, 0.05);
}

.settings-title {
	font-size: 1.2rem;
	font-weight: 600;
	letter-spacing: 2px;
	text-shadow: 0 0 5px var(--hal-red-glow);
}

.settings-close {
	background: none;
	border: 1px solid var(--hal-red);
	color: var(--hal-red);
	padding: 0.3rem 0.8rem;
	font-family: inherit;
	font-size: 1rem;
	cursor: pointer;
	transition: all 0.2s;
}

.settings-close:hover {
	background: var(--hal-red);
	color: var(--terminal-bg);
	box-shadow: 0 0 10px var(--hal-red-glow);
}

.settings-content {
	padding: 1.5rem;
}

.settings-section {
	margin-bottom: 2rem;
}

.settings-section h3 {
	font-size: 1.1rem;
	margin-bottom: 0.5rem;
	color: var(--hal-red);
	text-transform: uppercase;
	letter-spacing: 1px;
	text-shadow: 0 0 5px var(--hal-red-glow);
}

.settings-description {
	color: var(--terminal-text-dim);
	font-size: 0.9rem;
	margin-bottom: 1.5rem;
	line-height: 1.5;
}

.setting-item {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 1rem;
	margin-bottom: 1rem;
	border: 1px solid rgba(255, 0, 0, 0.3);
	background: rgba(255, 0, 0, 0.02);
	transition: all 0.2s;
}

.setting-item:hover {
	border-color: var(--hal-red);
	background: rgba(255, 0, 0, 0.05);
	box-shadow: 0 0 10px rgba(255, 0, 0, 0.2);
}

.setting-info {
	flex: 1;
	margin-right: 1rem;
}

.setting-info label {
	display: block;
	font-size: 0.95rem;
	font-weight: 600;
	margin-bottom: 0.3rem;
	cursor: pointer;
}

.setting-help {
	font-size: 0.8rem;
	color: var(--terminal-text-dim);
	line-height: 1.4;
	margin: 0;
}

/* Toggle Switch */
.toggle-switch {
	position: relative;
	width: 60px;
	height: 30px;
	flex-shrink: 0;
}

.toggle-switch input[type="checkbox"] {
	opacity: 0;
	width: 0;
	height: 0;
}

.toggle-slider {
	position: absolute;
	cursor: pointer;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	background: rgba(136, 0, 0, 0.5);
	border: 1px solid var(--hal-red);
	transition: 0.3s;
}

.toggle-slider:before {
	position: absolute;
	content: "";
	height: 20px;
	width: 20px;
	left: 4px;
	bottom: 4px;
	background: var(--terminal-text-dim);
	transition: 0.3s;
	box-shadow: 0 0 5px rgba(255, 0, 0, 0.5);
}

.toggle-switch input:checked + .toggle-slider {
	background: var(--hal-red);
	box-shadow: 0 0 10px var(--hal-red-glow);
}

.toggle-switch input:checked + .toggle-slider:before {
	transform: translateX(30px);
	background: #ffffff;
	box-shadow: 0 0 10px var(--hal-red-glow);
}

.settings-footer {
	display: flex;
	justify-content: flex-end;
	padding-top: 1rem;
	border-top: 1px solid rgba(255, 0, 0, 0.3);
}

.settings-footer .terminal-button {
	min-width: 120px;
}

/* ========================================
   EASTER EGG STYLES
   ======================================== */

/* Matrix Mode */
body.matrix-mode {
	--hal-red: #00ff00;
	--hal-red-glow: rgba(0, 255, 0, 0.8);
	--terminal-text: #00ff00;
	--terminal-text-dim: #008800;
	--terminal-glow: rgba(0, 255, 0, 0.5);
}

body.matrix-mode .hal-eye-iris {
	background: radial-gradient(
		circle at 40% 40%,
		#33ff33 0%,
		#00ff00 20%,
		#00cc00 40%,
		#008800 70%,
		#004400 100%
	);
}

body.matrix-mode::before {
	background: repeating-linear-gradient(
		0deg,
		rgba(0, 0, 0, 0.15) 0px,
		transparent 1px,
		transparent 2px,
		rgba(0, 0, 0, 0.15) 3px
	);
	animation: crt-flicker-green 0.15s infinite;
}

@keyframes crt-flicker-green {
	0% {
		opacity: 1;
	}
	50% {
		opacity: 0.98;
	}
	100% {
		opacity: 1;
	}
}

body.matrix-mode .scanlines {
	background: repeating-linear-gradient(
		0deg,
		transparent 0px,
		transparent 2px,
		rgba(0, 255, 0, 0.05) 2px,
		rgba(0, 255, 0, 0.05) 4px
	);
}

/* Matrix falling characters effect */
body.matrix-mode::after {
	content: "";
	position: fixed;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	pointer-events: none;
	z-index: 999;
	background-image: linear-gradient(
		transparent 30%,
		rgba(0, 255, 0, 0.05) 100%
	);
	background-size: 100% 20px;
	animation: matrix-rain 3s linear infinite;
}

@keyframes matrix-rain {
	0% {
		background-position: 0 0;
	}
	100% {
		background-position: 0 100vh;
	}
}

/* Screensaver Mode */
body.screensaver-active {
	animation: screensaver-dim 2s ease-out forwards;
}

@keyframes screensaver-dim {
	to {
		filter: brightness(0.3);
	}
}

body.screensaver-active .hal-eye {
	animation: screensaver-eye-wander 10s ease-in-out infinite;
}

@keyframes screensaver-eye-wander {
	0%,
	100% {
		transform: translate(0, 0) scale(1);
	}
	25% {
		transform: translate(-20px, -15px) scale(1.1);
	}
	50% {
		transform: translate(15px, 10px) scale(0.9);
	}
	75% {
		transform: translate(-10px, 20px) scale(1.05);
	}
}

body.screensaver-active .terminal {
	opacity: 0.3;
	transition: opacity 2s ease-out;
}

body.screensaver-active .scanlines {
	opacity: 0.5;
	animation:
		scanline-drift 8s linear infinite,
		screensaver-pulse 3s ease-in-out infinite;
}

@keyframes screensaver-pulse {
	0%,
	100% {
		opacity: 0.3;
	}
	50% {
		opacity: 0.6;
	}
}
