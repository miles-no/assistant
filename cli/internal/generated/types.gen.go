// Package generated provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package generated

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"
	"time"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "bearerAuth.Scopes"
)

// Defines values for BookingStatus.
const (
	BookingStatusCANCELLED BookingStatus = "CANCELLED"
	BookingStatusCONFIRMED BookingStatus = "CONFIRMED"
	BookingStatusPENDING   BookingStatus = "PENDING"
)

// Defines values for UserRole.
const (
	ADMIN   UserRole = "ADMIN"
	MANAGER UserRole = "MANAGER"
	USER    UserRole = "USER"
)

// Defines values for PatchApiBookingsIdJSONBodyStatus.
const (
	PatchApiBookingsIdJSONBodyStatusCANCELLED PatchApiBookingsIdJSONBodyStatus = "CANCELLED"
	PatchApiBookingsIdJSONBodyStatusCONFIRMED PatchApiBookingsIdJSONBodyStatus = "CONFIRMED"
	PatchApiBookingsIdJSONBodyStatusPENDING   PatchApiBookingsIdJSONBodyStatus = "PENDING"
)

// Booking defines model for Booking.
type Booking struct {
	CreatedAt   *time.Time     `json:"createdAt,omitempty"`
	Description *string        `json:"description,omitempty"`
	EndTime     *time.Time     `json:"endTime,omitempty"`
	Id          *string        `json:"id,omitempty"`
	RoomId      *string        `json:"roomId,omitempty"`
	StartTime   *time.Time     `json:"startTime,omitempty"`
	Status      *BookingStatus `json:"status,omitempty"`
	Title       *string        `json:"title,omitempty"`
	UpdatedAt   *time.Time     `json:"updatedAt,omitempty"`
	UserId      *string        `json:"userId,omitempty"`
}

// BookingStatus defines model for Booking.Status.
type BookingStatus string

// BookingInput defines model for BookingInput.
type BookingInput struct {
	Description *string   `json:"description,omitempty"`
	EndTime     time.Time `json:"endTime"`
	RoomId      string    `json:"roomId"`
	StartTime   time.Time `json:"startTime"`
	Title       string    `json:"title"`
}

// Error defines model for Error.
type Error struct {
	Error *string `json:"error,omitempty"`
}

// Location defines model for Location.
type Location struct {
	Address     *string    `json:"address,omitempty"`
	City        *string    `json:"city,omitempty"`
	Country     *string    `json:"country,omitempty"`
	CreatedAt   *time.Time `json:"createdAt,omitempty"`
	Description *string    `json:"description,omitempty"`
	Id          *string    `json:"id,omitempty"`
	Name        *string    `json:"name,omitempty"`
	Timezone    *string    `json:"timezone,omitempty"`
	UpdatedAt   *time.Time `json:"updatedAt,omitempty"`
}

// LocationInput defines model for LocationInput.
type LocationInput struct {
	Address     string  `json:"address"`
	City        string  `json:"city"`
	Country     string  `json:"country"`
	Description *string `json:"description,omitempty"`
	Name        string  `json:"name"`
	Timezone    *string `json:"timezone,omitempty"`
}

// Room defines model for Room.
type Room struct {
	Amenities   *[]string  `json:"amenities,omitempty"`
	Capacity    *int       `json:"capacity,omitempty"`
	CreatedAt   *time.Time `json:"createdAt,omitempty"`
	Description *string    `json:"description,omitempty"`
	Id          *string    `json:"id,omitempty"`
	IsActive    *bool      `json:"isActive,omitempty"`
	LocationId  *string    `json:"locationId,omitempty"`
	Name        *string    `json:"name,omitempty"`
	UpdatedAt   *time.Time `json:"updatedAt,omitempty"`
}

// RoomInput defines model for RoomInput.
type RoomInput struct {
	Amenities   *[]string `json:"amenities,omitempty"`
	Capacity    int       `json:"capacity"`
	Description *string   `json:"description,omitempty"`
	LocationId  string    `json:"locationId"`
	Name        string    `json:"name"`
}

// User defines model for User.
type User struct {
	CreatedAt *time.Time           `json:"createdAt,omitempty"`
	Email     *openapi_types.Email `json:"email,omitempty"`
	FirstName *string              `json:"firstName,omitempty"`
	Id        *string              `json:"id,omitempty"`
	LastName  *string              `json:"lastName,omitempty"`
	Role      *UserRole            `json:"role,omitempty"`
}

// UserRole defines model for User.Role.
type UserRole string

// ValidationError defines model for ValidationError.
type ValidationError struct {
	Details *[]struct {
		Message *string `json:"message,omitempty"`
		Path    *string `json:"path,omitempty"`
	} `json:"details,omitempty"`
	Error *string `json:"error,omitempty"`
}

// BookingId defines model for bookingId.
type BookingId = string

// LocationId defines model for locationId.
type LocationId = string

// RoomId defines model for roomId.
type RoomId = string

// Forbidden defines model for Forbidden.
type Forbidden = Error

// NotFound defines model for NotFound.
type NotFound = Error

// Unauthorized defines model for Unauthorized.
type Unauthorized = Error

// PostApiAuthLoginJSONBody defines parameters for PostApiAuthLogin.
type PostApiAuthLoginJSONBody struct {
	Email    openapi_types.Email `json:"email"`
	Password string              `json:"password"`
}

// PostApiAuthRegisterJSONBody defines parameters for PostApiAuthRegister.
type PostApiAuthRegisterJSONBody struct {
	Email     openapi_types.Email `json:"email"`
	FirstName string              `json:"firstName"`
	LastName  string              `json:"lastName"`
	Password  string              `json:"password"`
}

// GetApiBookingsParams defines parameters for GetApiBookings.
type GetApiBookingsParams struct {
	// RoomId Filter by room ID
	RoomId *string `form:"roomId,omitempty" json:"roomId,omitempty"`

	// LocationId Filter by location ID
	LocationId *string `form:"locationId,omitempty" json:"locationId,omitempty"`

	// StartDate Filter bookings starting after this date
	StartDate *time.Time `form:"startDate,omitempty" json:"startDate,omitempty"`

	// EndDate Filter bookings ending before this date
	EndDate *time.Time `form:"endDate,omitempty" json:"endDate,omitempty"`
}

// PatchApiBookingsIdJSONBody defines parameters for PatchApiBookingsId.
type PatchApiBookingsIdJSONBody struct {
	Description *string                           `json:"description,omitempty"`
	EndTime     *time.Time                        `json:"endTime,omitempty"`
	StartTime   *time.Time                        `json:"startTime,omitempty"`
	Status      *PatchApiBookingsIdJSONBodyStatus `json:"status,omitempty"`
	Title       *string                           `json:"title,omitempty"`
}

// PatchApiBookingsIdJSONBodyStatus defines parameters for PatchApiBookingsId.
type PatchApiBookingsIdJSONBodyStatus string

// PostApiLocationsIdManagersJSONBody defines parameters for PostApiLocationsIdManagers.
type PostApiLocationsIdManagersJSONBody struct {
	UserId string `json:"userId"`
}

// GetApiRoomsParams defines parameters for GetApiRooms.
type GetApiRoomsParams struct {
	// LocationId Filter rooms by location ID
	LocationId *string `form:"locationId,omitempty" json:"locationId,omitempty"`
}

// PatchApiRoomsIdJSONBody defines parameters for PatchApiRoomsId.
type PatchApiRoomsIdJSONBody struct {
	Amenities   *[]string `json:"amenities,omitempty"`
	Capacity    *int      `json:"capacity,omitempty"`
	Description *string   `json:"description,omitempty"`
	IsActive    *bool     `json:"isActive,omitempty"`
	Name        *string   `json:"name,omitempty"`
}

// GetApiRoomsIdAvailabilityParams defines parameters for GetApiRoomsIdAvailability.
type GetApiRoomsIdAvailabilityParams struct {
	StartDate time.Time `form:"startDate" json:"startDate"`
	EndDate   time.Time `form:"endDate" json:"endDate"`
}

// PostApiAuthLoginJSONRequestBody defines body for PostApiAuthLogin for application/json ContentType.
type PostApiAuthLoginJSONRequestBody PostApiAuthLoginJSONBody

// PostApiAuthRegisterJSONRequestBody defines body for PostApiAuthRegister for application/json ContentType.
type PostApiAuthRegisterJSONRequestBody PostApiAuthRegisterJSONBody

// PostApiBookingsJSONRequestBody defines body for PostApiBookings for application/json ContentType.
type PostApiBookingsJSONRequestBody = BookingInput

// PatchApiBookingsIdJSONRequestBody defines body for PatchApiBookingsId for application/json ContentType.
type PatchApiBookingsIdJSONRequestBody PatchApiBookingsIdJSONBody

// PostApiLocationsJSONRequestBody defines body for PostApiLocations for application/json ContentType.
type PostApiLocationsJSONRequestBody = LocationInput

// PatchApiLocationsIdJSONRequestBody defines body for PatchApiLocationsId for application/json ContentType.
type PatchApiLocationsIdJSONRequestBody = LocationInput

// PostApiLocationsIdManagersJSONRequestBody defines body for PostApiLocationsIdManagers for application/json ContentType.
type PostApiLocationsIdManagersJSONRequestBody PostApiLocationsIdManagersJSONBody

// PostApiRoomsJSONRequestBody defines body for PostApiRooms for application/json ContentType.
type PostApiRoomsJSONRequestBody = RoomInput

// PatchApiRoomsIdJSONRequestBody defines body for PatchApiRoomsId for application/json ContentType.
type PatchApiRoomsIdJSONRequestBody PatchApiRoomsIdJSONBody

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
